# -*- coding: utf-8 -*-
"""fpgrowth_utk_uas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11fkanmfcHWOmhe_rYjxNGoGxaN4Q6VnP
"""

# Commented out IPython magic to ensure Python compatibility.
!pip install mlxtend
# %pip install mlxtend --upgrade

import numpy as np
import pandas as pd
import io
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

from google.colab import files
uploaded = files.upload()

df = pd.read_csv(io.BytesIO(uploaded['Groceries_dataset.csv']))
df.head()

df = df.drop(columns=['Member_number', 'Date'])

from mlxtend.frequent_patterns import fpgrowth
items = (df['Item1'].unique())

encoded_vals = []
for index, row in df.iterrows():
    labels = {}
    uncommons = list(set(items) - set(row))
    commons = list(set(items).intersection(row))
    for uc in uncommons:
        labels[uc] = 0
    for com in commons:
        labels[com] = 1
    encoded_vals.append(labels)
encoded_vals[0]
ohe_df = pd.DataFrame(encoded_vals)

freq_items = fpgrowth(ohe_df, min_support=0.02, use_colnames=True)
freq_items.head()

rules = association_rules(freq_items, metric="confidence", min_threshold=0.1)
rules.head(10)

sr=[]
for row in rules.itertuples():
    if(len(getattr(row,'antecedents'))==2):
        sr.append(getattr(row,'Index'))
rules.iloc[sr].sort_values(by=['confidence'],ascending=False)